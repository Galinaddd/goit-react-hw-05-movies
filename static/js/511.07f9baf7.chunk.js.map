{"version":3,"file":"static/js/511.07f9baf7.chunk.js","mappings":"wMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IAErBC,MAAO,CAAEC,KAAMP,EAASQ,SAAWR,EAASS,QAH9C,SAKGN,EAAMO,OAASP,EAAMQ,QANjBR,EAAME,GADA,KAatB,C,mMCpBKO,EAAM,mCACNC,EAAW,+BAEJC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,IAFf,cACrBI,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBAC4BQ,IAFrB,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMhB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BR,EAA/B,oBAA6CO,IADrC,cACzBI,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBK,EAAiB,mCAAG,WAAMjB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAR,EADA,4BACsBO,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMnB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAR,EADA,4BACsBO,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,sJC9BjBO,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAM1B,OACE,SAAC,KAAD,CACEC,cAAe,CACblB,OAAQ,IAEVmB,SAViB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,EAAQG,GACRC,GACD,EAGC,UAME,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOpB,KAAK,YAExB,mBAAQoB,KAAK,SAAb,wBAIP,E,oBCqBD,EApCe,WAEb,OAA4BC,EAAAA,EAAAA,WAAS,kBAAM,IAAN,IAArC,eAAOjC,EAAP,KAAekC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAsBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SAC/BC,EAAY,mCAAG,iGAEbF,EAFa,iCAGanB,EAAAA,EAAAA,IAAiBmB,GAH9B,OAGTG,EAHS,OAIfR,EAAUQ,GAJK,uDAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qDAWlBH,GACD,GAAE,CAACL,KAGF,2BACE,iCACE,oCACA,SAACV,EAAD,CAAWC,QAxBK,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OACvB2B,EAAgB,CAAEhB,MAAOX,GAC1B,IAuBMV,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,QAItC,C","sources":["components/MoviesList/MoviesList.jsx","movieAPI.js","components/Searchbox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  // console.log('location in list ', location);\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            // state={{ from: location }}\n            state={{ from: location.pathname + location.search }}\n          >\n            {movie.title || movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n","import { Formik, Form, Field } from 'formik';\n\nexport const SearchBox = ({ onClick }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    onClick(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        search: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Field type=\"text\" name=\"search\" />\n\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchSearchMovie } from '../movieAPI';\nimport { SearchBox } from 'components/Searchbox/SearchBox';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  // const [searchQuery, setSearchQuery] = useState();\n  const [movies, setMovies] = useState(() => null);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const onSearchClick = ({ search }) => {\n    setSearchParams({ query: search });\n  };\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    const searchMovies = async () => {\n      try {\n        if (searchQuery) {\n          const visibleMovies = await fetchSearchMovie(searchQuery);\n          setMovies(visibleMovies);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    searchMovies();\n  }, [searchParams]);\n\n  return (\n    <main>\n      <>\n        <h1>Movies</h1>\n        <SearchBox onClick={onSearchClick} />\n        {movies && <MoviesList movies={movies} />}\n      </>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","pathname","search","title","name","KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews","SearchBox","onClick","initialValues","onSubmit","values","resetForm","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","searchMovies","visibleMovies","console","log"],"sourceRoot":""}