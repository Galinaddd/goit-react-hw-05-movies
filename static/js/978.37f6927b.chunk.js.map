{"version":3,"file":"static/js/978.37f6927b.chunk.js","mappings":"+MAEaA,EAAOC,EAAAA,GAAAA,IAAH,iKASJC,EAAMD,EAAAA,GAAAA,IAAH,yC,SCgDhB,MAxDkB,SAAC,GAAmB,IAAD,IAoDlBE,EApDEC,EAAgB,EAAhBA,UACnB,OACE,2BACE,UAACJ,EAAD,YACE,SAACE,EAAD,CACEG,IAAG,yCAAoCD,EAAUE,aACjDC,IAAKH,EAAUI,SAGjB,4BACE,wBAAKJ,EAAUI,SAEf,uCAEE,4BACGJ,EAAUK,aAAaC,QAAQ,GADlC,IACuCN,EAAUO,kBAInD,wCACa,0CAAQP,EAAUQ,WAAWF,QAAQ,UAArC,QAA2C,WAGxD,4CACiB,0BAAON,EAAUS,qBAGlC,mCACQ,2BAwBCV,EAxBgBC,EAAUU,OAyBpCX,EAAYY,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,aAtBvC,mCACA,iCAAId,EAAUe,gBAAd,QAA0B,eAKnC,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Tumb = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 20px;\n  stretch: no-stretch;\n  justify-content: space-between;\n  gap: 30px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n","import { Tumb, Img } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movieInfo }) => {\n  return (\n    <main>\n      <Tumb>\n        <Img\n          src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n          alt={movieInfo.title}\n        />\n\n        <div>\n          <h2>{movieInfo.title}</h2>\n\n          <p>\n            Vote/Votes\n            <span>\n              {movieInfo.vote_average.toFixed(1)}/{movieInfo.vote_count}\n            </span>\n          </p>\n\n          <p>\n            Popularity <span> {movieInfo.popularity.toFixed(1) ?? '-'}</span>\n          </p>\n\n          <p>\n            Original Title <span>{movieInfo.original_title}</span>\n          </p>\n\n          <p>\n            Genre <span>{getGenres(movieInfo.genres)}</span>\n          </p>\n\n          <h3>ABOUT</h3>\n          <p>{movieInfo.overview ?? '---'}</p>\n        </div>\n      </Tumb>\n    </main>\n  );\n};\n\nMovieCard.propTypes = {\n  movieInfo: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n    popularity: PropTypes.number.isRequired,\n    original_title: PropTypes.string,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nfunction getGenres(arrOfGenres) {\n  return arrOfGenres.map(genr => genr.name).join(', ');\n}\n\nexport default MovieCard;\n"],"names":["Tumb","styled","Img","arrOfGenres","movieInfo","src","poster_path","alt","title","vote_average","toFixed","vote_count","popularity","original_title","genres","map","genr","name","join","overview"],"sourceRoot":""}