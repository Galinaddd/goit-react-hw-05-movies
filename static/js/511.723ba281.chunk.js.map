{"version":3,"file":"static/js/511.723ba281.chunk.js","mappings":"wMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IAErBC,MAAO,CAAEC,KAAMP,EAASQ,SAAWR,EAASS,QAH9C,SAKGN,EAAMO,OAASP,EAAMQ,QANjBR,EAAME,GADA,KAatB,C,mMCpBKO,EAAM,mCACNC,EAAW,+BAEJC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,IAFf,cACrBI,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBAC4BQ,IAFrB,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMhB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BR,EAA/B,oBAA6CO,IADrC,cACzBI,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBK,EAAiB,mCAAG,WAAMjB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAR,EADA,4BACsBO,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMnB,GAAN,uFACRU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAR,EADA,4BACsBO,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,gKC7BjBO,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OACE,SAAC,KAAD,CACEC,cAAe,CACbrB,OAAQ,IAEVsB,SAbiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BP,EAAQM,GACRC,IACAC,QAAQC,IAAI,SAAUH,EAAOvB,QAC7BoB,EAAgB,CAAEpB,OAAQuB,EAAOvB,SACjCyB,QAAQC,IAAI,eAAgBP,EAC7B,EAGC,UAME,UAAC,KAAD,YACE,SAAC,KAAD,CAAOQ,KAAK,OAAOzB,KAAK,YAExB,mBAAQyB,KAAK,SAAb,wBAIP,E,UCUD,EAhCe,WACb,OAAsCC,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,kBAAM,IAAN,IAArC,eAAOtC,EAAP,KAAeyC,EAAf,KAqBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,iGAEbJ,EAFa,iCAGanB,EAAAA,EAAAA,IAAiBmB,GAH9B,OAGTK,EAHS,OAIfH,EAAUG,GAJK,uDAOjBT,QAAQC,IAAR,MAPiB,yDAAH,qDAWlBO,GACD,GAAE,CAACJ,KAGF,6BACE,oCACA,SAACb,EAAD,CAAWC,QAtBO,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OACvB8B,EAAe9B,EAChB,IAqBI6B,GAAevC,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGnD,C","sources":["components/MoviesList/MoviesList.jsx","movieAPI.js","components/Searchbox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  // console.log('location in list ', location);\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            // state={{ from: location }}\n            state={{ from: location.pathname + location.search }}\n          >\n            {movie.title || movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n","import { Formik, Form, Field } from 'formik';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchBox = ({ onClick }) => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const handleSubmit = (values, { resetForm }) => {\n    onClick(values);\n    resetForm();\n    console.log('values', values.search);\n    setSearchParams({ search: values.search });\n    console.log('searchParams', searchParams);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        search: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Field type=\"text\" name=\"search\" />\n\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchSearchMovie } from '../movieAPI';\nimport { SearchBox } from 'components/Searchbox/SearchBox';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState();\n  const [movies, setMovies] = useState(() => null);\n\n  const onSearchClick = ({ search }) => {\n    setSearchQuery(search);\n  };\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      try {\n        if (searchQuery) {\n          const visibleMovies = await fetchSearchMovie(searchQuery);\n          setMovies(visibleMovies);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    searchMovies();\n  }, [searchQuery]);\n\n  return (\n    <main>\n      <h1>Movies</h1>\n      <SearchBox onClick={onSearchClick} />\n      {searchQuery && movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","pathname","search","title","name","KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews","SearchBox","onClick","useSearchParams","searchParams","setSearchParams","initialValues","onSubmit","values","resetForm","console","log","type","useState","searchQuery","setSearchQuery","setMovies","useEffect","searchMovies","visibleMovies"],"sourceRoot":""}