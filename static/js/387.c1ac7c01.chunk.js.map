{"version":3,"file":"static/js/387.c1ac7c01.chunk.js","mappings":"kSAEaA,EAAMC,EAAAA,GAAAA,IAAH,4EAKHC,EAAQD,EAAAA,GAAAA,GAAH,2FAKLE,EAAOF,EAAAA,GAAAA,GAAH,+GAOJG,EAAWH,EAAAA,GAAAA,GAAH,gL,SC6BrB,EA1Ca,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBP,GADrB,OAClBQ,EADkB,OAGxBJ,EAAQI,GAHgB,2CAAH,qDAMvBF,GACD,GAAE,CAACN,KAGF,8BACGG,EAAKM,OAAS,GACb,SAACX,EAAD,UACGK,EAAKO,KAAI,SAAAC,GAAI,OACZ,SAACZ,EAAD,WACE,4BACE,SAACJ,EAAD,CACEiB,IACED,EAAKE,aAAL,yCACsCF,EAAKE,aAD3C,MAGIC,EAENC,IAAKJ,EAAKK,QAEZ,SAACnB,EAAD,UAAQc,EAAKK,QACb,sCAAcL,EAAKM,iBAZRN,EAAKO,QADR,OAmBhB,2CAIP,C,mMC7CKC,EAAM,mCACNC,EAAW,+BAEJC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,IAFf,cACrBI,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBAC4BQ,IAFrB,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,oBAA6CV,IADrC,cACzBI,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBjB,EAAiB,mCAAG,WAAMsB,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKrB,MAJU,2CAAH,sDAOjB2B,EAAiB,mCAAG,WAAMD,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: block;\n  margin: auto;\n  width: 100%;\n`;\nexport const Title = styled.h4`\n  font-size: 18px;\n  display: inline-block;\n  margin: 8px auto;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-between;\n`;\n\nexport const ListItem = styled.li`\n  color: #000000;\n  list-style: none;\n  text-align: center;\n  margin-bottom: 16px;\n\n  width: 100px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'movieAPI';\nimport { useState, useEffect } from 'react';\nimport notfound from '../../images/notfound.png';\nimport { ListItem, Img, Title, List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getmovieCreditsID = async () => {\n      const movieCredits = await fetchMovieCredits(movieId);\n\n      setCast(movieCredits);\n    };\n\n    getmovieCreditsID();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <List>\n          {cast.map(item => (\n            <ListItem key={item.cast_id}>\n              <div>\n                <Img\n                  src={\n                    item.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${item.profile_path}\n`\n                      : notfound\n                  }\n                  alt={item.name}\n                />\n                <Title>{item.name}</Title>\n                <p>Character {item.character}</p>\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>No information</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n"],"names":["Img","styled","Title","List","ListItem","movieId","useParams","useState","cast","setCast","useEffect","getmovieCreditsID","fetchMovieCredits","movieCredits","length","map","item","src","profile_path","notfound","alt","name","character","cast_id","KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieReviews"],"sourceRoot":""}