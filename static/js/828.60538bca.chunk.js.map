{"version":3,"file":"static/js/828.60538bca.chunk.js","mappings":"mTAEMA,EAAM,mCACNC,EAAW,+BAEJC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,IAFf,cACrBI,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBAC4BQ,IAFrB,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,oBAA6CV,IADrC,cACzBI,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBM,EAAiB,mCAAG,WAAMD,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKO,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BACsBV,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,0HC5BxBQ,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA8CvB,UA5CsB,WAAO,IAAD,EAC1B,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,UAAGF,EAASG,aAAZ,aAAG,EAAgBC,KAcrC,OAZAC,QAAQC,IAAI,sBAAuBJ,IAEnCK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,qGACIpB,EAAAA,EAAAA,IAAkBU,GADtB,OACdW,EADc,OAGpBZ,EAASY,GAHW,2CAAH,qDAMnBD,GACD,GAAE,CAACV,KAGF,iCACE,SAAC,KAAD,CAAMY,GAAIR,EAAV,qBACCN,IAAS,SAACH,EAAD,CAAWgB,UAAWb,KAChC,2BACE,yBACE,SAAC,KAAD,CAAMc,GAAG,OAAOP,MAAO,CAAEC,KAAMJ,EAASW,SAAWX,EAASY,QAA5D,qBAIF,yBACE,SAAC,KAAD,CACEF,GAAG,UACHP,MAAO,CAAEC,KAAMJ,EAASW,SAAWX,EAASY,QAF9C,2BAQJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["movieAPI.js","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n","import { fetchMovieDetails } from 'movieAPI';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense, lazy } from 'react';\n\nconst MovieCard = lazy(() => import('components/MovieCard/MovieCard'));\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from;\n\n  console.log('location in details', backLinkHref);\n\n  useEffect(() => {\n    const getMoviesByID = async () => {\n      const movieInfo = await fetchMovieDetails(movieId);\n\n      setMovie(movieInfo);\n    };\n\n    getMoviesByID();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>Go back</Link>\n      {movie && <MovieCard movieInfo={movie} />}\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.pathname + location.search }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"reviews\"\n            state={{ from: location.pathname + location.search }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MoviesDetails;\n"],"names":["KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","id","fetchMovieCredits","cast","fetchMovieReviews","MovieCard","lazy","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","state","from","console","log","useEffect","getMoviesByID","movieInfo","to","pathname","search","Suspense","fallback"],"sourceRoot":""}