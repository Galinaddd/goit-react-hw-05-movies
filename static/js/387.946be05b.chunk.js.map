{"version":3,"file":"static/js/387.946be05b.chunk.js","mappings":"sRAEaA,EAAWC,EAAAA,GAAAA,GAAH,6JASRC,EAAMD,EAAAA,GAAAA,IAAH,2EAKHE,EAAQF,EAAAA,GAAAA,GAAH,2F,SCyBlB,EApCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBP,GADrB,OAClBQ,EADkB,OAGxBJ,EAAQI,GAHgB,2CAAH,qDAMvBF,GACD,GAAE,CAACN,KAGF,8BACGG,GACC,wBACGA,EAAKM,KAAI,SAAAC,GAAI,OACZ,UAACd,EAAD,YACE,SAACE,EAAD,CACEa,IAAG,yCAAoCD,EAAKE,aAAzC,MAEHC,IAAKH,EAAKI,QAEZ,SAACf,EAAD,UAAQW,EAAKI,QACb,sCAAcJ,EAAKK,eAPNL,EAAKM,GADR,OAahB,2CAIP,C,mMCtCKC,EAAM,mCACNC,EAAW,+BAEJC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qCACmBD,IAFf,cACrBI,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBAC4BQ,IAFrB,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMV,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,oBAA6CC,IADrC,cACzBI,EADyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBf,EAAiB,mCAAG,WAAMS,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAF,EADA,4BACsBC,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKnB,MAJU,2CAAH,sDAOjBwB,EAAiB,mCAAG,WAAMX,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAF,EADA,4BACsBC,IAFd,cACzBI,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  color: #000000;\n  list-style: none;\n  text-align: center;\n  margin-bottom: 16px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const Img = styled.img`\n  display: block;\n  margin: auto;\n  width: 25%;\n`;\nexport const Title = styled.h4`\n  font-size: 18px;\n  display: inline-block;\n  margin: 8px auto;\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'movieAPI';\nimport { useState, useEffect } from 'react';\nimport { ListItem, Img, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getmovieCreditsID = async () => {\n      const movieCredits = await fetchMovieCredits(movieId);\n\n      setCast(movieCredits);\n    };\n\n    getmovieCreditsID();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast ? (\n        <ul>\n          {cast.map(item => (\n            <ListItem key={item.id}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w500${item.profile_path}\n`}\n                alt={item.name}\n              />\n              <Title>{item.name}</Title>\n              <p>Character {item.character}</p>\n            </ListItem>\n          ))}\n        </ul>\n      ) : (\n        <p>No information</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n"],"names":["ListItem","styled","Img","Title","movieId","useParams","useState","cast","setCast","useEffect","getmovieCreditsID","fetchMovieCredits","movieCredits","map","item","src","profile_path","alt","name","character","id","KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}