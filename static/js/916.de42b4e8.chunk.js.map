{"version":3,"file":"static/js/916.de42b4e8.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/SharedLayout/SharedLayout.styled.js","movieAPI.js","components/Searchbox/SearchBox.styled.js","components/Searchbox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  color: #ffffff;\n`;\n\nexport const Link = styled(NavLink)`\n  color: #000000;\n  font-size: 18px;\n  line-height: 1.3;\n  text-decoration: none;\n  &:hover,\n  &focus {\n    color: #ff0000;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location.pathname + location.search }}\n          >\n            {movie.title || movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n      vote_count: PropTypes.number.isRequired,\n      popularity: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      genres: PropTypes.array,\n      overview: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div``;\n\nexport const Div = styled.div`\n  padding: 20px 20px;\n`;\n\nexport const Header = styled.header`\n  padding: 20px;\n  box-shadow: 1px 4px 6px 0px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 1px 4px 6px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 1px 4px 6px 0px rgba(0, 0, 0, 0.75);\n`;\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: red;\n  }\n`;\n","import axios from 'axios';\n\nconst KEY = 'cc007006eb9f47c2d0b09069b6e665b4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTraiding = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const responce = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  &:hover {\n    color: #ff0000;\n    border: 1px solid;\n  }\n`;\n","import { Formik, Form, Field } from 'formik';\nimport { Button } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ onClick }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    onClick(values);\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        search: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Field type=\"text\" name=\"search\" />\n\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nSearchBox.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchSearchMovie } from '../movieAPI';\nimport { SearchBox } from 'components/Searchbox/SearchBox';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Div } from 'components/SharedLayout/SharedLayout.styled';\n\nconst Movies = () => {\n  const [message, setMessage] = useState();\n  const [movies, setMovies] = useState(() => null);\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const onSearchClick = ({ search }) => {\n    const normalisedSearch = search.trim().toLowerCase();\n    if (normalisedSearch === '') {\n      setMessage('enter search query');\n      return;\n    }\n    setSearchParams({ query: search });\n    setMessage('');\n  };\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    const searchMovies = async () => {\n      try {\n        if (searchQuery) {\n          const visibleMovies = await fetchSearchMovie(searchQuery);\n          setMovies(visibleMovies);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    searchMovies();\n  }, [searchParams]);\n\n  return (\n    <main>\n      <Div>\n        <h1>Movies</h1>\n        <SearchBox onClick={onSearchClick} />\n\n        {!message && movies ? <MoviesList movies={movies} /> : <p>{message}</p>}\n      </Div>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Link","styled","NavLink","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","pathname","search","title","name","Container","Div","Header","StyledLink","KEY","BASE_URL","fetchTraiding","axios","responce","data","results","fetchSearchMovie","query","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieReviews","Button","SearchBox","onClick","initialValues","onSubmit","values","resetForm","type","useState","message","setMessage","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","searchMovies","visibleMovies","console","log","trim","toLowerCase"],"sourceRoot":""}